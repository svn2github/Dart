# Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

vars = {
  # Use this googlecode_url variable only if there is an internal mirror for it.
  # If you do not know, use the full path while defining your new deps entry.
  "googlecode_url": "http://%s.googlecode.com/svn",
  "dart_branch": "/branches/bleeding_edge",

  "gyp_rev": "@1752",
  "co19_rev": "@786",
  "chromium_git": "https://chromium.googlesource.com",

  # Revisions of /third_party/* dependencies.
  "fake_async_rev": "@38614",
  "matcher_rev": "@43e2811b53ee3a8df862524c186bed89e29f703d",
  "net_nss_rev": "@f81948e9a402db94287a43bb34a07ee0daf56cb5",
  "nss_rev": "@87b96db4268293187d7cf741907a6d5d1d8080e0",
  "observe_rev": "@11f536784589a288d275462f7407a1f07ba4de75",
  "path_rev": "@a2d53a06f1cedf32363bdc5419476c33b9f728bc",
  "petitparser_rev" : "@37878",
  "smoke_rev": "@52abda1f29d5c9aad1baa8424ac115912bafcc0d",
  "sqlite_rev": "@38811b79f42801662adc0458a25270ab690a6b81",
  "stack_trace_rev": "@22d92b32de066e4932867c3ab3c8d8f7d9f29f44",
  "unittest_rev": "@2381a2e53080d4c8a499c2a9d4d224a96490feaf",
  "zlib_rev": "@c3d0a6190f2f8c924a05ab6cc97b8f975bddd33f",
  "observatory_pub_packages_rev": "@42487",
}

deps = {
  "dart":
    Var("dart_branch") + "/dart",

  # co19 tests.
  "dart/tests/co19/src": ((Var("googlecode_url") % "co19") +
      "/trunk/co19/tests/co19/src" + Var("co19_rev")),

  # Stuff needed for GYP to run.
  "dart/third_party/gyp":
    "http://gyp.googlecode.com/svn/trunk" + Var("gyp_rev"),

  # Stuff needed for secure sockets.
  "dart/third_party/nss":
      Var("chromium_git") + "/chromium/deps/nss.git" + Var("nss_rev"),

  "dart/third_party/sqlite":
      Var("chromium_git") + "/chromium/src/third_party/sqlite.git" +
      Var("sqlite_rev"),

  "dart/third_party/zlib":
      Var("chromium_git") + "/chromium/src/third_party/zlib.git" +
      Var("zlib_rev"),

  "dart/third_party/net_nss":
      Var("chromium_git") + "/chromium/src/net/third_party/nss.git" +
      Var("net_nss_rev"),

  # Observatory stuff
  "dart/third_party/observatory_pub_packages":
      "/third_party/observatory_pub_packages" +
      Var("observatory_pub_packages_rev"),

  # Stuff needed to run pkg tests.
  # External packages.
  "dart/third_party/pkg/fake_async":
      "/third_party/fake_async" + Var("fake_async_rev"),
  "dart/third_party/pkg/matcher":
      "https://github.com/dart-lang/matcher.git" + Var("matcher_rev"),
  "dart/third_party/pkg/observe":
      "https://github.com/dart-lang/observe.git" + Var("observe_rev"),
  "dart/third_party/pkg/path":
      "https://github.com/dart-lang/path.git" + Var("path_rev"),
  "dart/third_party/pkg/petitparser":
      "/third_party/petitparser" + Var("petitparser_rev"),
  "dart/third_party/pkg/smoke":
      "https://github.com/dart-lang/smoke.git" + Var("smoke_rev"),
  "dart/third_party/pkg/stack_trace":
      "https://github.com/dart-lang/stack_trace.git" + Var("stack_trace_rev"),
  "dart/third_party/pkg/unittest":
      "https://github.com/dart-lang/unittest.git" + Var("unittest_rev"),
}

deps_os = {
  "win": {
    "third_party/cygwin":
      Var("chromium_git") + "/chromium/deps/cygwin.git" +
      "@c89e446b273697fadf3a10ff1007a97c0b7de6df",
  },
}

hooks = [
  {
    "pattern": ".",
    "action": ["python", "dart/tools/gyp_dart.py", "runtime"],
  },
]
